# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\vinmayp\Desktop\BILayer\BILayer.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

# import resource_rc

import sys, warnings, os
import time
from threading import Thread

from PyQt5.QtCore import QObject, pyqtSignal, QThread
from PyQt5.QtWidgets import QDialog, QMainWindow, QApplication, QListWidgetItem
from PyQt5 import QtCore, QtGui, QtWidgets

import SyntaxHighlighter as sh
import required as rq

import snowflake.connector
import pandas as pd
import sqlparse


sidebar = 0
creds = []
con = 1

# Global Query Tab Variables
QueryTabCounter = 0
PreviousQueryTab = 0
QueryTabList = []

ExecutedQueryNumber = 0
ExecutedQueryTextList = []
QueryTextList = [[], [], [], [], [], [], [], [], [], []]
DataFrameList = ["", "", ""]

# Global Connection Variables
ConnectionList = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

rn = 3

warnings.filterwarnings('ignore')  # setting ignore as a parameter


class Worker(QObject):
    finished = pyqtSignal(int)
    progress = pyqtSignal(str)
    sqlerror = pyqtSignal(int)
    sqlcomplete = pyqtSignal(int)

    def __init__(self, n):
        super(Worker, self).__init__()
        self.n = n

    def run(self):
        global QueryTextList, DataFrameList, ConnectionList, ExecutedQueryTextList, ExecutedQueryNumber, creds, rn
        # print('in run 1')
        ErrorOccuredInd = 0

        if self.n >= 0:
            exec("""con%d = snowflake.connector.connect(
                    user='%s',
                    password='%s',
                    account='%s',
                    warehouse='%s',
                    database='%s',
                    schema='%s'
                )""" % (self.n, creds[0], creds[1], creds[2], creds[3], creds[4], creds[5]))

        ttq = len(QueryTextList[self.n])
        i = 1
        for QueryText in QueryTextList[self.n]:
            try:
                """Long-running task."""
                self.progress.emit('Running query {} of {}'.format(i, ttq))
                # exec("""self.df = pd.read_sql('%s', con%d)""" % (QueryText, self.n))
                exec("""for chunk in pd.read_sql('%s', con%d, chunksize=%d):
                        \n    self.df = chunk
                        \n    break""" % (QueryText, self.n, int(window.TopRowsLineEdit.text())))

                ExecutedQueryTextList.append(QueryText)
                window.tableWidget.setRowCount(ExecutedQueryNumber+1)
                item = QtWidgets.QTableWidgetItem()
                item.setText(str(ExecutedQueryNumber))
                window.tableWidget.setVerticalHeaderItem(ExecutedQueryNumber, item)
                item = QtWidgets.QTableWidgetItem()
                item.setText(str(QueryText))
                window.tableWidget.setItem(ExecutedQueryNumber, 0, item)
                ExecutedQueryNumber += 1

                if window.NullAsLineEdit.text() == '':
                    print('Default NULL value used')
                elif window.NullAsLineEdit.text() == ' ':
                    self.df = self.df.fillna('')
                else:
                    self.df = self.df.fillna(window.NullAsLineEdit.text())

                DataFrameList.insert(rn, self.df)
                self.sqlcomplete.emit(rn)
            except pd.errors.DatabaseError as e:
                err = "Error occurred at sql {} \n {}".format(i, str(e.args[0]))
                window.label.setStyleSheet("color:red;")
                window.label.setText(err)
                ErrorOccuredInd = 1
                self.sqlerror.emit(self.n)
                break
            i += 1

        if self.n >= 0:
            exec("""con%d.close()""" % self.n)
        if ErrorOccuredInd == 0:
            self.finished.emit(self.n)
            print(ExecutedQueryTextList)

    def stop(self):
        self._isRunning = False


class Ui_MainWindow(QMainWindow):

    def __init__(self, parent=None):
        super(Ui_MainWindow, self).__init__(parent)
        self.setObjectName("Ui_MainWindow")
        self.resize(950, 700)

        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setStyleSheet("background-color: rgb(39, 39, 47);")
        self.centralwidget.setObjectName("centralwidget")

        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout.setObjectName("verticalLayout")

        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setObjectName("widget")

        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        self.widget_8 = QtWidgets.QWidget(self.widget)
        self.widget_8.setObjectName("widget_8")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.widget_8)
        self.horizontalLayout_3.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_8 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_8.setStyleSheet("QPushButton{\n"
                                        "color:white;\n"
                                        "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                        "border-style: outset;\n"
                                        "border-width: 0px;\n"
                                        "width:60;\n"
                                        "height:40;\n"
                                        "}\n"
                                        "QPushButton:hover {\n"
                                        "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                        "    border-style: outset;\n"
                                        "    border-width: 0.5px;\n"
                                        "    border-color: rgb(170, 0, 255);\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    border-style: outset;\n"
                                        "    border-width: 0.5px;\n"
                                        "    border-color: rgb(253, 204, 96);\n"
                                        "}")
        self.pushButton_8.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/whiteIcons/featherwhite/sidebar.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_8.setIcon(icon)
        self.pushButton_8.setObjectName("pushButton_8")
        self.horizontalLayout_3.addWidget(self.pushButton_8)
        self.pushButton = QtWidgets.QPushButton(self.widget_8)
        self.pushButton.setStyleSheet("QPushButton{\n"
                                      "color: white;\n"
                                      "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                      "border-style: outset;\n"
                                      "border-width: 0px;\n"
                                      "width:60;\n"
                                      "height:40;\n"
                                      "}\n"
                                      "QPushButton:hover {\n"
                                      "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                      "    border-style: outset;\n"
                                      "    border-width: 0.5px;\n"
                                      "    border-color: rgb(0, 255, 127);\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed {\n"
                                      "    border-style: outset;\n"
                                      "    border-width: 0.5px;\n"
                                      "    border-color: rgb(253, 204, 96);\n"
                                      "}")
        self.pushButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/whiteIcons/featherwhite/play.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon1)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_3.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_2.setStyleSheet("QPushButton{\n"
                                        "color:white;\n"
                                        "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                        "border-style: outset;\n"
                                        "border-width: 0px;\n"
                                        "width:60;\n"
                                        "height:40;\n"
                                        "}\n"
                                        "QPushButton:hover {\n"
                                        "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                        "    border-style: outset;\n"
                                        "    border-width: 0.5px;\n"
                                        "    border-color: rgb(0, 255, 255);\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    border-style: outset;\n"
                                        "    border-width: 0.5px;\n"
                                        "    border-color: rgb(253, 204, 96);\n"
                                        "}")
        self.pushButton_2.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/whiteIcons/featherwhite/save.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_2.setIcon(icon2)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_3.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget_8)
        self.pushButton_3.setStyleSheet("QPushButton{\n"
                                        "color: white;\n"
                                        "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                        "border-style: outset;\n"
                                        "border-width: 0px;\n"
                                        "width:60;\n"
                                        "height:40;\n"
                                        "}\n"
                                        "QPushButton:hover {\n"
                                        "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                        "    border-style: outset;\n"
                                        "    border-width: 0.5px;\n"
                                        "    border-color: rgb(255, 255, 0);\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    border-style: outset;\n"
                                        "    border-width: 0.5px;\n"
                                        "    border-color: rgb(253, 204, 96);\n"
                                        "}")
        self.pushButton_3.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/whiteIcons/featherwhite/download.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_3.setIcon(icon3)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_3.addWidget(self.pushButton_3)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.verticalLayout_2.addWidget(self.widget_8)
        self.widget_2 = QtWidgets.QWidget(self.widget)
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget_3 = QtWidgets.QWidget(self.widget_2)
        self.widget_3.setObjectName("widget_3")
        self.widget_3.hide()
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.widget_3)
        self.verticalLayout_9.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.toolBox = QtWidgets.QToolBox(self.widget_3)
        self.toolBox.setStyleSheet("QToolBox{\n"
                                   "    border-style: inset;\n"
                                   "    border-width: 0px;\n"
                                   "    border-color: rgb(170, 0, 255);\n"
                                   "}\n"
                                   "\n"
                                   "QToolBox::tab {\n"
                                   "color:white;\n"
                                   "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                   "border-style:none;\n"
                                   "width:80px;\n"
                                   "height:26px;\n"
                                   "} \n"
                                   "\n"
                                   "QToolBox::tab:selected { \n"
                                   "      background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                   "    border-style: outset;\n"
                                   "    border-width: 0.5px;\n"
                                   "    border-color: rgb(170, 0, 255);\n"
                                   "}")
        self.toolBox.setObjectName("toolBox")

        self.page = QtWidgets.QWidget()
        self.page.setGeometry(QtCore.QRect(0, 0, 177, 525))
        self.page.setObjectName("page")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.page)
        self.verticalLayout_10.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.widget_14 = QtWidgets.QWidget(self.page)
        self.widget_14.setObjectName("widget_14")
        self.widget_14.setStyleSheet("color:white;")
        self.formLayout = QtWidgets.QFormLayout(self.widget_14)
        self.formLayout.setContentsMargins(2, 2, 2, 2)
        self.formLayout.setObjectName("formLayout")
        self.DBLabel = QtWidgets.QLabel(self.widget_14)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.DBLabel.sizePolicy().hasHeightForWidth())
        self.DBLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Segoe UI Variable Small Semibol")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.DBLabel.setFont(font)
        self.DBLabel.setStyleSheet("background-image: url(:/whiteIcons/featherwhite/database.svg);\n"
                                   "background-repeat: no-repeat;\n"
                                   "background-position: center;\n"
                                   "color: rgb(55, 55, 64);")
        self.DBLabel.setObjectName("DBLabel")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.DBLabel)
        self.DBComboBox = QtWidgets.QComboBox(self.widget_14)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.DBComboBox.setFont(font)
        self.DBComboBox.setStyleSheet("QComboBox{\n"
                                      "color:white;\n"
                                      "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                      "border-style: outset;\n"
                                      "border-width: 0px;\n"
                                      "width:63;\n"
                                      "height:23;\n"
                                      "}\n"
                                      "QComboBox:hover {\n"
                                      "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                      "    border-style: outset;\n"
                                      "    border-width: 0.5px;\n"
                                      "    border-color: rgb(0, 255, 127);\n"
                                      "}\n"
                                      "\n"
                                      "QComboBox:pressed {\n"
                                      "    border-style: outset;\n"
                                      "    border-width: 0.5px;\n"
                                      "    border-color: rgb(253, 204, 96);\n"
                                      "}")
        self.DBComboBox.setObjectName("DBComboBox")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.DBComboBox)
        self.SchemaLabel = QtWidgets.QLabel(self.widget_14)
        font = QtGui.QFont()
        font.setFamily("Segoe UI Variable Small Semibol")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.SchemaLabel.setFont(font)
        self.SchemaLabel.setStyleSheet("background-image: url(:/whiteIcons/featherwhite/trello.svg);\n"
                                       "background-repeat: no-repeat;\n"
                                       "background-position: center;\n"
                                       "color: rgb(55, 55, 64);")
        self.SchemaLabel.setObjectName("SchemaLabel")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.SchemaLabel)
        self.SchemaComboBox = QtWidgets.QComboBox(self.widget_14)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        self.SchemaComboBox.setFont(font)
        self.SchemaComboBox.setStyleSheet("QComboBox{\n"
                                          "color:white;\n"
                                          "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                          "border-style: outset;\n"
                                          "border-width: 0px;\n"
                                          "width:63;\n"
                                          "height:23;\n"
                                          "}\n"
                                          "QComboBox:hover {\n"
                                          "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                          "    border-style: outset;\n"
                                          "    border-width: 0.5px;\n"
                                          "    border-color: rgb(255, 255, 0);\n"
                                          "}\n"
                                          "\n"
                                          "QComboBox:pressed {\n"
                                          "    border-style: outset;\n"
                                          "    border-width: 0.5px;\n"
                                          "    border-color: rgb(253, 204, 96);\n"
                                          "}")
        self.SchemaComboBox.setObjectName("SchemaComboBox")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.SchemaComboBox)
        self.TableLabel = QtWidgets.QLabel(self.widget_14)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TableLabel.sizePolicy().hasHeightForWidth())
        self.TableLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Segoe UI Variable Small Semibol")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.TableLabel.setFont(font)
        self.TableLabel.setStyleSheet("background-image: url(:/whiteIcons/featherwhite/table.svg);\n"
                                      "background-repeat: no-repeat;\n"
                                      "background-position: center;\n"
                                      "color: rgb(55, 55, 64);")
        self.TableLabel.setObjectName("TableLabel")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.TableLabel)
        self.TableComboBox = QtWidgets.QComboBox(self.widget_14)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        self.TableComboBox.setFont(font)
        self.TableComboBox.setStyleSheet("QComboBox{\n"
                                         "color:white;\n"
                                         "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                         "border-style: outset;\n"
                                         "border-width: 0px;\n"
                                         "width:63;\n"
                                         "height:23;\n"
                                         "}\n"
                                         "QComboBox:hover {\n"
                                         "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                         "    border-style: outset;\n"
                                         "    border-width: 0.5px;\n"
                                         "    border-color: rgb(0, 255, 255);\n"
                                         "}\n"
                                         "\n"
                                         "QComboBox:pressed {\n"
                                         "    border-style: outset;\n"
                                         "    border-width: 0.5px;\n"
                                         "    border-color: rgb(253, 204, 96);\n"
                                         "}")
        self.TableComboBox.setObjectName("TableComboBox")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.TableComboBox)
        self.TopRowsLineEdit = QtWidgets.QLineEdit(self.widget_14)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TopRowsLineEdit.sizePolicy().hasHeightForWidth())
        self.TopRowsLineEdit.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.TopRowsLineEdit.setFont(font)
        self.TopRowsLineEdit.setStyleSheet("QLineEdit{\n"
                                           "color:white;\n"
                                           "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                           "border-style: outset;\n"
                                           "border-width: 0px;\n"
                                           "width:80;\n"
                                           "height:30;\n"
                                           "}\n"
                                           "QLineEdit:hover {\n"
                                           "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                           "}")
        self.TopRowsLineEdit.setObjectName("TopRowsLineEdit")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.TopRowsLineEdit)
        self.NullAsLineEdit = QtWidgets.QLineEdit(self.widget_14)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.NullAsLineEdit.sizePolicy().hasHeightForWidth())
        self.NullAsLineEdit.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.NullAsLineEdit.setFont(font)
        self.NullAsLineEdit.setStyleSheet("QLineEdit{\n"
                                          "color:white;\n"
                                          "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                          "border-style: outset;\n"
                                          "border-width: 0px;\n"
                                          "width:80;\n"
                                          "height:30;\n"
                                          "}\n"
                                          "QLineEdit:hover {\n"
                                          "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                          "}")
        self.NullAsLineEdit.setText("")
        self.NullAsLineEdit.setObjectName("NullAsLineEdit")
        self.formLayout.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.NullAsLineEdit)
        self.NullAsLabel = QtWidgets.QLabel(self.widget_14)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.NullAsLabel.setFont(font)
        self.NullAsLabel.setStyleSheet("color: white;")
        self.NullAsLabel.setObjectName("NullAsLabel")
        self.formLayout.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.NullAsLabel)
        self.TopRowsLabel = QtWidgets.QLabel(self.widget_14)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.TopRowsLabel.setFont(font)
        self.TopRowsLabel.setStyleSheet("color: white;")
        self.TopRowsLabel.setObjectName("TopRowsLabel")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.TopRowsLabel)
        self.verticalLayout_10.addWidget(self.widget_14)
        self.toolBox.addItem(self.page, "")
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setGeometry(QtCore.QRect(0, 0, 177, 525))
        self.page_2.setObjectName("page_2")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.page_2)
        self.verticalLayout_11.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.widget_15 = QtWidgets.QWidget(self.page_2)
        self.widget_15.setObjectName("widget_15")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.widget_15)
        self.verticalLayout_14.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.SearchSavedSqlLineEdit = QtWidgets.QLineEdit(self.widget_15)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.SearchSavedSqlLineEdit.setFont(font)
        self.SearchSavedSqlLineEdit.setStyleSheet("QLineEdit{\n"
                                                  "color:white;\n"
                                                  "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                                  "border-style: outset;\n"
                                                  "border-width: 0px;\n"
                                                  "width:60;\n"
                                                  "height:30;\n"
                                                  "}\n"
                                                  "QLineEdit:hover {\n"
                                                  "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                                  "}")
        self.SearchSavedSqlLineEdit.setText("")
        self.SearchSavedSqlLineEdit.setObjectName("SearchSavedSqlLineEdit")
        self.verticalLayout_14.addWidget(self.SearchSavedSqlLineEdit)
        self.SavedSqlListWidget = QtWidgets.QListWidget(self.widget_15)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.SavedSqlListWidget.setFont(font)
        self.SavedSqlListWidget.setStyleSheet("")
        self.SavedSqlListWidget.setObjectName("SavedSqlListWidget")
        self.verticalLayout_14.addWidget(self.SavedSqlListWidget)
        self.verticalLayout_11.addWidget(self.widget_15)
        self.toolBox.addItem(self.page_2, "")

        self.verticalLayout_9.addWidget(self.toolBox)
        self.horizontalLayout.addWidget(self.widget_3)
        self.widget_9 = QtWidgets.QWidget(self.widget_2)
        self.widget_9.setObjectName("widget_9")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.widget_9)
        self.horizontalLayout_5.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.tabWidget = QtWidgets.QTabWidget(self.widget_9)
        self.tabWidget.setStyleSheet("QTabWidget::pane { border: 0; }\n"
                                     "\n"
                                     "QTabWidget{\n"
                                     "    border-style: none;\n"
                                     "    border-width: 0px;\n"
                                     "    border-color: rgb(170, 0, 255);\n"
                                     "}\n"
                                     "\n"
                                     "QTabBar::tab {\n"
                                     "color:white;\n"
                                     "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                     "border-style:none;\n"
                                     "width:80px;\n"
                                     "height:26px;\n"
                                     "} \n"
                                     "\n"
                                     "QTabBar::tab:selected { \n"
                                     "      background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                     "    border-style: outset;\n"
                                     "    border-width: 0.5px;\n"
                                     "    border-color: rgb(170, 0, 255);\n"
                                     "}")
        self.tabWidget.setObjectName("tabWidget")
        self.Tool = QtWidgets.QWidget()
        self.Tool.setObjectName("Tool")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.Tool)
        self.horizontalLayout_4.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.widget_4 = QtWidgets.QWidget(self.Tool)
        self.widget_4.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(55, 55, 64);")
        self.widget_4.setObjectName("widget_4")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget_4)
        self.horizontalLayout_2.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.widget_5 = QtWidgets.QWidget(self.widget_4)
        self.widget_5.setObjectName("widget_5")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget_5)
        self.verticalLayout_3.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.lineEdit = QtWidgets.QLineEdit(self.widget_5)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("QLineEdit{\n"
                                    "color:white;\n"
                                    "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                    "border-style: outset;\n"
                                    "border-width: 0px;\n"
                                    "width:60;\n"
                                    "height:30;\n"
                                    "}\n"
                                    "QLineEdit:hover {\n"
                                    "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                    "}")
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_3.addWidget(self.lineEdit)
        # self.listWidget = QtWidgets.QListWidget(self.widget_5)
        self.listWidget = rq.DeleteDroppedListWidget()
        font = QtGui.QFont()
        font.setPointSize(10)
        self.listWidget.setFont(font)
        self.listWidget.setStyleSheet("""QListWidget{
                                      color:white;
                                      }
                                      QListWidget::item:selected{
                                      background-color: rgb(85, 85, 255);
                                      }""")
        self.listWidget.setObjectName("listWidget")
        self.listWidget.setDragEnabled(True)
        self.listWidget.setSortingEnabled(True)
        self.listWidget.setSelectionMode(3)
        self.verticalLayout_3.addWidget(self.listWidget)
        self.horizontalLayout_2.addWidget(self.widget_5)
        self.widget_6 = QtWidgets.QWidget(self.widget_4)
        self.widget_6.setObjectName("widget_6")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_6)
        self.verticalLayout_4.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_4.setObjectName("verticalLayout_4")

        self.label_2 = QtWidgets.QLabel(self.widget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: white;\n"
                                   "height:40px;")
        self.label_2.setObjectName("label_2")
        self.verticalLayout_4.addWidget(self.label_2)

        # self.listWidget_2 = QtWidgets.QListWidget(self.widget_6)
        self.listWidget_2 = rq.SelectDropableListWidget()
        font = QtGui.QFont()
        font.setPointSize(10)
        self.listWidget_2.setFont(font)
        self.listWidget_2.setObjectName("listWidget_2")
        self.listWidget_2.setSortingEnabled(True)
        self.listWidget_2.setDragEnabled(True)
        self.listWidget_2.setSelectionMode(3)
        self.verticalLayout_4.addWidget(self.listWidget_2)
        self.horizontalLayout_2.addWidget(self.widget_6)
        self.widget_7 = QtWidgets.QWidget(self.widget_4)
        self.widget_7.setObjectName("widget_7")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.widget_7)
        self.verticalLayout_5.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_5.setObjectName("verticalLayout_5")

        self.label_3 = QtWidgets.QLabel(self.widget_7)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_5.addWidget(self.label_3)

        # self.listWidget_3 = QtWidgets.QListWidget(self.widget_7)
        self.listWidget_3 = rq.FilterDropableListWidget()
        font = QtGui.QFont()
        font.setPointSize(10)
        self.listWidget_3.setFont(font)
        self.listWidget_3.setObjectName("listWidget_3")
        self.listWidget_3.setSortingEnabled(True)
        self.listWidget_3.setDragEnabled(True)
        self.verticalLayout_5.addWidget(self.listWidget_3)
        self.horizontalLayout_2.addWidget(self.widget_7)
        self.horizontalLayout_4.addWidget(self.widget_4)
        self.tabWidget.addTab(self.Tool, "")
        self.Query = QtWidgets.QWidget()
        self.Query.setObjectName("Query")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.Query)
        self.verticalLayout_13.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.widget_16 = QtWidgets.QWidget(self.Query)
        self.widget_16.setObjectName("widget_16")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.widget_16)
        self.horizontalLayout_8.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.frame = QtWidgets.QFrame(self.widget_16)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_12.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.pushButton_9 = QtWidgets.QPushButton(self.frame)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.pushButton_9.setFont(font)
        self.pushButton_9.setStyleSheet("QPushButton{\n"
                                        "color: white;\n"
                                        "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                        "border-style: outset;\n"
                                        "border-width: 0px;\n"
                                        "width:63;\n"
                                        "height:29;\n"
                                        "font: 9.5pt \"Calibri\";\n"
                                        "}\n"
                                        "QPushButton:hover {\n"
                                        "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                        "    border-style: outset;\n"
                                        "    border-width: 0.5px;\n"
                                        "    border-color: rgb(0, 255, 127);\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:pressed {\n"
                                        "    border-style: outset;\n"
                                        "    border-width: 0.5px;\n"
                                        "    border-color: rgb(253, 204, 96);\n"
                                        "}")
        self.pushButton_9.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/whiteIcons/featherwhite/plus.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_9.setIcon(icon4)
        self.pushButton_9.setObjectName("pushButton_9")
        self.verticalLayout_12.addWidget(self.pushButton_9)
        self.listWidget_4 = QtWidgets.QListWidget(self.frame)
        self.listWidget_4.setStyleSheet("QListWidget{\n"
                                        "    border-style:none;\n"
                                        "    color:white;\n"
                                        "}\n"
                                        "QListWidget::item:selected{\n"
                                        "background-color: rgb(85, 85, 255);\n"
                                        "}")
        self.listWidget_4.setObjectName("listWidget_4")
        self.verticalLayout_12.addWidget(self.listWidget_4)
        self.horizontalLayout_8.addWidget(self.frame)
        self.frame_2 = QtWidgets.QFrame(self.widget_16)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_9.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.textEdit = QtWidgets.QTextEdit(self.frame_2)
        self.textEdit.setStyleSheet("QTextEdit{\n"
                                    "color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(55, 55, 64);\n"
                                    "font: 10pt \"Calibri\";\n"
                                    "border-style: none;\n"
                                    "}\n"
                                    "QTextEdit:focus{\n"
                                    "border-style:outset;\n"
                                    "border-width:0.5px;\n"
                                    "border-color: rgb(255, 170, 0);\n"
                                    "}")
        self.textEdit.setObjectName("textEdit")
        self.textEdit.setEnabled(False)
        self.horizontalLayout_9.addWidget(self.textEdit)
        self.horizontalLayout_8.addWidget(self.frame_2)
        self.horizontalLayout_8.setStretch(0, 1)
        self.horizontalLayout_8.setStretch(1, 9)
        self.verticalLayout_13.addWidget(self.widget_16)
        self.tabWidget.addTab(self.Query, "")

        self.History = QtWidgets.QWidget()
        self.History.setObjectName("History")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.History)
        self.verticalLayout_15.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.tableWidget = QtWidgets.QTableWidget(self.History)
        self.tableWidget.setStyleSheet("QTableView{\n"
                                       "background-color: rgb(55, 55, 64);\n"
                                       "color: white;\n"
                                       "font: 10pt \"Calibri\";\n"
                                       "}\n"
                                       "QHeaderView::section { \n"
                                       "background-color:rgb(61, 155, 229);\n"
                                       "color:white;\n"
                                       "}")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(1)

        item = QtWidgets.QTableWidgetItem()
        item.setText("SQL")
        self.tableWidget.setHorizontalHeaderItem(0, item)

        self.verticalLayout_15.addWidget(self.tableWidget)
        self.tabWidget.addTab(self.History, "")

        self.horizontalLayout_5.addWidget(self.tabWidget)
        self.horizontalLayout.addWidget(self.widget_9)
        self.horizontalLayout.setStretch(0, 2)
        self.horizontalLayout.setStretch(1, 8)
        self.verticalLayout_2.addWidget(self.widget_2)
        self.widget_13 = QtWidgets.QWidget(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_13.sizePolicy().hasHeightForWidth())
        self.widget_13.setSizePolicy(sizePolicy)
        self.widget_13.setObjectName("widget_13")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.widget_13)
        self.horizontalLayout_7.setContentsMargins(2, 2, 2, 5)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label = QtWidgets.QLabel(self.widget_13)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setStyleSheet("color:white;")
        self.label.setObjectName("label")
        self.horizontalLayout_7.addWidget(self.label)
        self.progressBar = QtWidgets.QProgressBar(self.widget_13)
        font = QtGui.QFont()
        font.setPointSize(2)
        self.progressBar.setFont(font)
        self.progressBar.setStyleSheet("height: 8px;\n"
                                       "color:white;")
        self.progressBar.setProperty("value", 10)
        self.progressBar.setOrientation(QtCore.Qt.Horizontal)
        self.progressBar.setInvertedAppearance(False)
        self.progressBar.setObjectName("progressBar")
        self.progressBar.setVisible(False)
        self.horizontalLayout_7.addWidget(self.progressBar)
        self.horizontalLayout_7.setStretch(0, 7)
        self.horizontalLayout_7.setStretch(1, 3)
        self.verticalLayout_2.addWidget(self.widget_13)
        self.verticalLayout.addWidget(self.widget)
        self.setCentralWidget(self.centralwidget)

        self.retranslateUi()
        self.toolBox.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        self.pushButton.clicked.connect(self.StartRunningQuery)
        self.pushButton_8.clicked.connect(self.SideBar)
        self.pushButton_9.clicked.connect(self.AddQueryTab)
        self.lineEdit.textChanged.connect(self.SearchColumns)
        self.listWidget.itemDoubleClicked.connect(self.AddColumnToSelect)
        self.listWidget_2.itemDoubleClicked.connect(self.RemoveColumnFromSelect)
        self.listWidget_3.itemDoubleClicked.connect(self.RemoveColumnFromFilter)
        self.listWidget.SelectColumnDropped.connect(self.DeleteSelectColumns)
        self.listWidget.FilterColumnDropped.connect(self.DeleteFilterColumns)
        self.listWidget_4.currentItemChanged.connect(self.QueryTabChanged)
        self.DBComboBox.currentTextChanged.connect(self.CreateGettingSchemaThread)
        self.SchemaComboBox.currentTextChanged.connect(self.CreateGettingTablesThread)
        self.TableComboBox.currentTextChanged.connect(self.CreateGettingColumnsThread)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Ui_MainWindow", "BILayer"))
        self.pushButton_8.setToolTip(_translate("Ui_MainWindow", "<html><head/><body><p>Open/Close "
                                                                 "SideBar</p></body></html>"))
        self.pushButton.setToolTip(_translate("Ui_MainWindow", "<html><head/><body><p>Run SQL</p></body></html>"))
        self.pushButton_2.setToolTip(_translate("Ui_MainWindow", "<html><head/><body><p>Save SQL</p></body></html>"))
        self.pushButton_3.setToolTip(_translate("Ui_MainWindow", "<html><head/><body><p>Import SQL</p></body></html>"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page), _translate("Ui_MainWindow", "Page 1"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), _translate("Ui_MainWindow", "Page 2"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Tool), _translate("Ui_MainWindow", "Tool"))
        __sortingEnabled = self.listWidget_4.isSortingEnabled()
        self.listWidget_4.setSortingEnabled(False)
        self.listWidget_4.setSortingEnabled(__sortingEnabled)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Query), _translate("Ui_MainWindow", "Query"))
        self.label.setText(_translate("Ui_MainWindow", "Status Label"))
        self.label_2.setText(_translate("MainWindow", "Select"))
        self.label_3.setText(_translate("MainWindow", "Where"))
        self.DBLabel.setText(_translate("MainWindow", ".        ."))
        self.SchemaLabel.setText(_translate("MainWindow", ".        ."))
        self.TableLabel.setText(_translate("MainWindow", ".        ."))
        self.TopRowsLineEdit.setText(_translate("MainWindow", "10000"))
        self.NullAsLabel.setText(_translate("MainWindow", " Null As"))
        self.TopRowsLabel.setText(_translate("MainWindow", " Limit:"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page), _translate("MainWindow", "Table / Utilities"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), _translate("MainWindow", "Saved SQLs"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.History), _translate("MainWindow", "History"))

    def SideBar(self):
        global sidebar
        if sidebar == 1:
            self.widget_3.hide()
            sidebar = 0
        elif sidebar == 0:
            self.widget_3.show()
            sidebar = 1

    def CreateDBConnectingThread(self):
        thread = Thread(target=self.TryConnectingDB)
        thread.start()

    def TryConnectingDB(self):
        global creds, con

        self.label.setStyleSheet("color: rgb(255, 255, 0);")
        self.label.setText("""Connecting to Server...""")
        try:
            con = snowflake.connector.connect(
                user=creds[0],
                password=creds[1],
                account=creds[2],
                warehouse=creds[3],
                database=creds[4],
                schema=creds[5]
            )

            self.GetDatabases()

            self.label.setStyleSheet("color: rgb(0, 255, 0);")
            self.label.setText('Connected!')
        except:
            self.label.setStyleSheet("color: rgb(255, 0, 0);")
            self.label.setText('Login Failed!')

    def LoginWindow(self):
        global creds

        login = rq.Ui_LoginDialog(self)
        if login.exec_() == QDialog.Accepted:
            login.SetCreds()
            creds = login.GetInput()
            self.CreateDBConnectingThread()
            login.deleteLater()

    def AddQueryTab(self):
        global QueryTabCounter, QueryTabList

        if self.listWidget_4.count() == 0:
            self.textEdit.setDisabled(False)
            self.listWidget_4.addItem("Tab %d" % QueryTabCounter)
            QueryTabList.insert(0, "")
            self.listWidget_4.setCurrentRow(0)
        else:
            self.listWidget_4.addItem("Tab %d" % QueryTabCounter)
            QueryTabList.insert(QueryTabCounter, "")
            self.listWidget_4.setCurrentRow(QueryTabCounter)

        self.textEdit.setFocus()
        self.pushButton.setEnabled(True)

        QueryTabCounter += 1

    def QueryTabChanged(self):
        global QueryTabCounter, QueryTabList, PreviousQueryTab

        if self.listWidget_4.count() != 1:
            QueryTabList.pop(PreviousQueryTab)
            QueryTabList.insert(PreviousQueryTab, self.textEdit.toPlainText())
            self.textEdit.setText(QueryTabList[self.listWidget_4.currentRow()])

            PreviousQueryTab = self.listWidget_4.currentRow()

    def StartRunningQuery(self):
        global QueryTextList, ConnectionList

        self.textEdit.setFocus()
        Queries = []

        if len(self.textEdit.toPlainText().strip()) == 0:
            print("No SQL provided")
        elif len(self.textEdit.textCursor().selection().toPlainText()) == 0:
            Queries = sqlparse.split(self.textEdit.toPlainText())
            for i in range(0, 9):
                if ConnectionList[i] == 0:
                    # print(ConnectionList[i])
                    QueryTextList[i] = Queries
                    ConnectionList[i] = 1
                    self.CreateWorkerThread(i)
                    break
                # elif ConnectionList[i] == 1:
                #     print(ConnectionList[i])
                elif i == 9 and ConnectionList[i] == 1:
                    print("Max parallel query run limit reach")
        else:
            Queries = sqlparse.split(self.textEdit.textCursor().selection().toPlainText())
            for i in range(0, 9):
                if ConnectionList[i] == 0:
                    # print(ConnectionList[i])
                    QueryTextList[i] = Queries
                    ConnectionList[i] = 1
                    self.CreateWorkerThread(i)
                    break
                else:
                    print("Max parallel query run limit reach")

    def CreateWorkerThread(self, n):
        try:
            # print('in here %d' % n)
            exec("""self.thread_%d = QThread()""" % n)
            # print('in here %d' % n)
            exec("""self.worker_%d = Worker(%d)""" % (n, n))
            # print('in here %d' % n)
            exec("""self.worker_%d.moveToThread(self.thread_%d)""" % (n, n))
            # print('in here %d' % n)
            exec("""self.thread_%d.started.connect(self.worker_%d.run)""" % (n, n))
            # print('in here %d' % n)
            # exec("""self.worker_%d.progress.connect(self.SetupLabel)""" % n)
            exec("""self.worker_%d.sqlerror.connect(self.DeleteWorkerThread)""" % n)
            # print('in here %d' % n)
            exec("""self.worker_%d.sqlcomplete.connect(self.SetTableView)""" % n)
            exec("""self.worker_%d.finished.connect(self.DeleteWorkerThread)""" % n)
            # print('in here %d' % n)

            exec("""self.thread_%d.start()""" % n)
        except:
            print("This Thread is in use")

    def DeleteWorkerThread(self, n):
        global QueryTextList, ConnectionList

        try:
            time.sleep(1.5)
            # print('1 in delete %d' % n)
            exec("""self.worker_%d.stop()""" % n)
            # print('2 in delete %d' % n)
            exec("""self.worker_%d.deleteLater()""" % n)
            # print('3 in delete %d' % n)
            exec("""self.thread_%d.exit(0)""" % n)
            # print('4 in delete %d' % n)
            exec("""self.thread_%d.deleteLater()""" % n)
            ConnectionList[n] = 0
            # print('5 in delete %d' % n)
        except:
            print("no object")

    def SetTableView(self, n=1):
        global rn, DataFrameList

        resultnumber = rn
        rn += 1

        exec("""self.ResultTab_%d = QtWidgets.QWidget()""" % resultnumber)
        exec("""self.ResultTab_%d.setObjectName("ResultTab_%d")""" % (resultnumber, resultnumber))

        exec("""self.RTVerticalLayout_%d = QtWidgets.QVBoxLayout(self.ResultTab_%d)""" % (resultnumber, resultnumber))
        exec("""self.RTVerticalLayout_%d.setContentsMargins(2, 2, 2, 2)""" % resultnumber)
        exec("""self.RTVerticalLayout_%d.setObjectName("RTVerticalLayout_%d")""" % (resultnumber, resultnumber))

        exec("""self.ResultTabParentWidget_%d = QtWidgets.QWidget(self.ResultTab_%d)""" % (resultnumber, resultnumber))
        eval("""self.ResultTabParentWidget_%d""" % resultnumber).setStyleSheet("color: rgb(255, 255, 255);\n"
                                                                     "background-color: rgb(55, 55, 64);")
        exec("""self.ResultTabParentWidget_%d.setObjectName("ResultTabParentWidget_%d")""" % (resultnumber, resultnumber))

        exec("""self.RTPWVerticalLayout_%d = QtWidgets.QVBoxLayout(self.ResultTabParentWidget_%d)""" % (resultnumber, resultnumber))
        exec("""self.RTPWVerticalLayout_%d.setContentsMargins(2, 2, 2, 2)""" % resultnumber)
        exec("""self.RTPWVerticalLayout_%d.setObjectName("RTPWVerticalLayout_%d")""" % (resultnumber, resultnumber))

        exec("""self.ResultTabChildWidget1_%d = QtWidgets.QWidget(self.ResultTabParentWidget_%d)""" % (resultnumber, resultnumber))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        exec("""sizePolicy.setHeightForWidth(self.ResultTabChildWidget1_%d.sizePolicy().hasHeightForWidth())""" % resultnumber)
        exec("""self.ResultTabChildWidget1_%d.setSizePolicy(sizePolicy)""" % resultnumber)
        exec("""self.ResultTabChildWidget1_%d.setObjectName("ResultTabChildWidget1_%d")""" % (resultnumber, resultnumber))

        exec("""self.RTCW1hHorizontalLayout_%d = QtWidgets.QHBoxLayout(self.ResultTabChildWidget1_%d)""" % (resultnumber, resultnumber))
        exec("""self.RTCW1hHorizontalLayout_%d.setContentsMargins(2, 2, 2, 2)""" % resultnumber)
        exec("""self.RTCW1hHorizontalLayout_%d.setObjectName("RTCW1hHorizontalLayout_%d")""" % (resultnumber, resultnumber))

        exec("""self.PopOutBTN_%d = QtWidgets.QPushButton(self.ResultTabChildWidget1_%d)""" % (resultnumber, resultnumber))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        exec("""sizePolicy.setHeightForWidth(self.PopOutBTN_%d.sizePolicy().hasHeightForWidth())""" % resultnumber)
        exec("""self.PopOutBTN_%d.setSizePolicy(sizePolicy)""" % resultnumber)
        eval("""self.PopOutBTN_%d""" % resultnumber).setStyleSheet("QPushButton{\n"
                                                         "color: white;\n"
                                                         "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, "
                                                         "stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, "
                                                         "60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 "
                                                         "rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n "
                                                         "border-style: outset;\n"
                                                         "border-width: 0px;\n"
                                                         "width:40;\n"
                                                         "height:30;\n"
                                                         "}\n"
                                                         "QPushButton:hover {\n"
                                                         "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, "
                                                         "stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, "
                                                         "80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), "
                                                         "stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, "
                                                         "255));\n "
                                                         "    border-style: outset;\n"
                                                         "    border-width: 0.5px;\n"
                                                         "    border-color: rgb(0, 255, 127);\n"
                                                         "}\n"
                                                         "\n"
                                                         "QPushButton:pressed {\n"
                                                         "    border-style: outset;\n"
                                                         "    border-width: 0.5px;\n"
                                                         "    border-color: rgb(253, 204, 96);\n"
                                                         "}")
        exec("""self.PopOutBTN_%d.setText("")""" % resultnumber)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/whiteIcons/featherwhite/external-link.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        exec("""self.PopOutBTN_%d.setIcon(icon5)""" % resultnumber)
        exec("""self.PopOutBTN_%d.setObjectName("PopOutBTN_%d")""" % (resultnumber, resultnumber))
        exec("""self.RTCW1hHorizontalLayout_%d.addWidget(self.PopOutBTN_%d)""" % (resultnumber, resultnumber))

        exec("""self.SQLBTN_%d = QtWidgets.QPushButton(self.ResultTabChildWidget1_%d)""" % (resultnumber, resultnumber))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        exec("""sizePolicy.setHeightForWidth(self.SQLBTN_%d.sizePolicy().hasHeightForWidth())""" % resultnumber)
        exec("""self.SQLBTN_%d.setSizePolicy(sizePolicy)""" % resultnumber)
        eval("""self.SQLBTN_%d""" % resultnumber).setStyleSheet("QPushButton{\n"
                                                      "color: white;\n"
                                                      "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, "
                                                      "stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, "
                                                      "60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba("
                                                      "80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n "
                                                      "border-style: outset;\n"
                                                      "border-width: 0px;\n"
                                                      "width:40;\n"
                                                      "height:30;\n"
                                                      "}\n"
                                                      "QPushButton:hover {\n"
                                                      "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                                      "    border-style: outset;\n"
                                                      "    border-width: 0.5px;\n"
                                                      "    border-color: rgb(255, 255, 0);\n"
                                                      "}\n"
                                                      "\n"
                                                      "QPushButton:pressed {\n"
                                                      "    border-style: outset;\n"
                                                      "    border-width: 0.5px;\n"
                                                      "    border-color: rgb(253, 204, 96);\n"
                                                      "}")
        exec("""self.SQLBTN_%d.setText("")""" % resultnumber)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/whiteIcons/featherwhite/edit.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        exec("""self.SQLBTN_%d.setIcon(icon6)""" % resultnumber)
        exec("""self.SQLBTN_%d.setObjectName("SQLBTN_%d")""" % (resultnumber, resultnumber))
        exec("""self.RTCW1hHorizontalLayout_%d.addWidget(self.SQLBTN_%d)""" % (resultnumber, resultnumber))

        exec("""self.ExportBTN_%d = QtWidgets.QPushButton(self.ResultTabChildWidget1_%d)""" % (resultnumber, resultnumber))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        exec("""sizePolicy.setHeightForWidth(self.ExportBTN_%d.sizePolicy().hasHeightForWidth())""" % resultnumber)
        exec("""self.ExportBTN_%d.setSizePolicy(sizePolicy)""" % resultnumber)
        eval("""self.ExportBTN_%d""" % resultnumber).setStyleSheet("QPushButton{\n"
                                                          "color:white;\n"
                                                          "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n"
                                                          "border-style: outset;\n"
                                                          "border-width: 0px;\n"
                                                          "width:40;\n"
                                                          "height:30;\n"
                                                          "}\n"
                                                          "QPushButton:hover {\n"
                                                          "    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n"
                                                          "    border-style: outset;\n"
                                                          "    border-width: 0.5px;\n"
                                                          "    border-color: rgb(0, 255, 255);\n"
                                                          "}\n"
                                                          "\n"
                                                          "QPushButton:pressed {\n"
                                                          "    border-style: outset;\n"
                                                          "    border-width: 0.5px;\n"
                                                          "    border-color: rgb(253, 204, 96);\n"
                                                          "}")
        exec("""self.ExportBTN_%d.setText("")""" % resultnumber)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/whiteIcons/featherwhite/file-text.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        exec("""self.ExportBTN_%d.setIcon(icon7)""" % resultnumber)
        exec("""self.ExportBTN_%d.setObjectName("ExportBTN_%d")""" % (resultnumber, resultnumber))
        exec("""self.RTCW1hHorizontalLayout_%d.addWidget(self.ExportBTN_%d)""" % (resultnumber, resultnumber))

        exec("""self.SearchLineEdit_%d = QtWidgets.QLineEdit(self.ResultTabChildWidget1_%d)""" % (resultnumber, resultnumber))
        font = QtGui.QFont()
        font.setPointSize(10)
        exec("""self.SearchLineEdit_%d.setFont(font)""" % resultnumber)
        eval("""self.SearchLineEdit_%d""" % resultnumber).setStyleSheet("QLineEdit{\n"
                                                              "color:white;\n"
                                                              "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, "
                                                              "stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba("
                                                              "60, 60, 60, 255), stop:0.517413 rgba(68, 68, 68, 255), "
                                                              "stop:0.716418 rgba(80, 80, 80, 255), stop:1 rgba(115, 115, "
                                                              "115, 255));\n "
                                                              "border-style: outset;\n"
                                                              "border-width: 0px;\n"
                                                              "width:60;\n"
                                                              "height:30;\n"
                                                              "}\n"
                                                              "QLineEdit:hover {\n"
                                                              "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, "
                                                              "stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 "
                                                              "rgba(80, 80, 80, 255), stop:0.547264 rgba(68, 68, 68, "
                                                              "255), stop:0.781095 rgba(60, 60, 60, 255), stop:1 rgba(59, "
                                                              "59, 59, 255));\n "
                                                              "}")
        exec("""self.SearchLineEdit_%d.setText("")""" % resultnumber)
        exec("""self.SearchLineEdit_%d.setObjectName("SearchLineEdit_%d")""" % (resultnumber, resultnumber))
        exec("""self.RTCW1hHorizontalLayout_%d.addWidget(self.SearchLineEdit_%d)""" % (resultnumber, resultnumber))

        exec("""spacer_%d = QtWidgets.QSpacerItem(82, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)""" % resultnumber)
        exec("""self.RTCW1hHorizontalLayout_%d.addItem(spacer_%d)""" % (resultnumber, resultnumber))

        exec("""self.CloseBTN_%d = QtWidgets.QPushButton(self.ResultTabChildWidget1_%d)""" % (resultnumber, resultnumber))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        exec("""sizePolicy.setHeightForWidth(self.CloseBTN_%d.sizePolicy().hasHeightForWidth())""" % resultnumber)
        exec("""self.CloseBTN_%d.setSizePolicy(sizePolicy)""" % resultnumber)
        exec("""self.CloseBTN_%d.setAutoFillBackground(False)""" % resultnumber)
        eval("""self.CloseBTN_%d""" % resultnumber).setStyleSheet("QPushButton{\n"
                                                        "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, "
                                                        "stop:0.149254 rgba(59, 59, 59, 255), stop:0.328358 rgba(60, 60, "
                                                        "60, 255), stop:0.517413 rgba(68, 68, 68, 255), stop:0.716418 "
                                                        "rgba(80, 80, 80, 255), stop:1 rgba(115, 115, 115, 255));\n "
                                                        "border-style: outset;\n"
                                                        "border-width: 0px;\n"
                                                        "width:40;\n"
                                                        "height:30;\n"
                                                        "}\n"
                                                        "QPushButton:hover {\n"
                                                        "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, "
                                                        "stop:0.0248756 rgba(115, 115, 115, 255), stop:0.353234 rgba(80, "
                                                        "80, 80, 255), stop:0.547264 rgba(68, 68, 68, 255), stop:0.781095 "
                                                        "rgba(60, 60, 60, 255), stop:1 rgba(59, 59, 59, 255));\n "
                                                        "    border-style: outset;\n"
                                                        "    border-width: 0.5px;\n"
                                                        "    border-color: rgb(255, 75, 75);\n"
                                                        "}\n"
                                                        "\n"
                                                        "QPushButton:pressed {\n"
                                                        "    border-style: outset;\n"
                                                        "    border-width: 0.5px;\n"
                                                        "    border-color: rgb(253, 204, 96);\n"
                                                        "}")
        exec("""self.CloseBTN_%d.setText("")""" % resultnumber)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/whiteIcons/featherwhite/x.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        exec("""self.CloseBTN_%d.setIcon(icon8)""" % resultnumber)
        exec("""self.CloseBTN_%d.setObjectName("CloseBTN_%d")""" % (resultnumber, resultnumber))
        exec("""self.RTCW1hHorizontalLayout_%d.addWidget(self.CloseBTN_%d)""" % (resultnumber, resultnumber))

        exec("""self.RTCW1hHorizontalLayout_%d.setStretch(0, 1)""" % resultnumber)
        exec("""self.RTCW1hHorizontalLayout_%d.setStretch(1, 1)""" % resultnumber)
        exec("""self.RTCW1hHorizontalLayout_%d.setStretch(2, 1)""" % resultnumber)
        exec("""self.RTCW1hHorizontalLayout_%d.setStretch(3, 5)""" % resultnumber)
        exec("""self.RTCW1hHorizontalLayout_%d.setStretch(4, 1)""" % resultnumber)
        exec("""self.RTCW1hHorizontalLayout_%d.setStretch(5, 1)""" % resultnumber)

        exec("""self.RTPWVerticalLayout_%d.addWidget(self.ResultTabChildWidget1_%d)""" % (resultnumber, resultnumber))

        exec("""self.TableViewWidget_%d = QtWidgets.QWidget(self.ResultTabParentWidget_%d)""" % (resultnumber, resultnumber))
        exec("""self.TableViewWidget_%d.setObjectName("TableViewWidget_%d")""" % (resultnumber, resultnumber))

        exec("""self.TableViewWidgetVLayout_%d = QtWidgets.QVBoxLayout(self.TableViewWidget_%d)""" % (resultnumber, resultnumber))
        exec("""self.TableViewWidgetVLayout_%d.setContentsMargins(2, 2, 2, 2)""" % resultnumber)
        exec("""self.TableViewWidgetVLayout_%d.setObjectName("TableViewWidgetVLayout_%d")""" % (resultnumber, resultnumber))

        exec("""self.tableView_%d = QtWidgets.QTableView(self.TableViewWidget_%d)""" % (resultnumber, resultnumber))
        exec("""self.tableView_%d.setObjectName("tableView_%d")""" % (resultnumber, resultnumber))
        eval("""self.tableView_%d""" % resultnumber).setStyleSheet("""QTableView{background-color: rgb(55, 55, 
        64);\ncolor: white; font: 10pt\n "Calibri";}\nQHeaderView::section { background-color:rgb(61, 155, 
        229);\ncolor:white;}""")
        exec("""self.tableView_%d.setSortingEnabled(True)""" % resultnumber)

        exec("""self.TableViewWidgetVLayout_%d.addWidget(self.tableView_%d)""" % (resultnumber, resultnumber))
        exec("""self.RTPWVerticalLayout_%d.addWidget(self.TableViewWidget_%d)""" % (resultnumber, resultnumber))
        exec("""self.RTVerticalLayout_%d.addWidget(self.ResultTabParentWidget_%d)""" % (resultnumber, resultnumber))
        exec("""self.tabWidget.addTab(self.ResultTab_%d, "")""" % resultnumber)

        exec("""model_%d = rq.TableModel(DataFrameList[%d])""" % (resultnumber, resultnumber))
        eval("""self.tableView_%d""" % resultnumber).setModel(eval("""model_%d""" % resultnumber))

        self.tabWidget.setTabText(resultnumber, "Result %d" % (resultnumber-2))
        self.tabWidget.setCurrentIndex(resultnumber)

    def SearchColumns(self, text):

        model = self.listWidget.model()
        match = model.match(
            model.index(0, self.listWidget.modelColumn()),
            QtCore.Qt.DisplayRole,
            text,
            hits=1,
            flags=QtCore.Qt.MatchStartsWith)
        if match:
            self.listWidget.setCurrentIndex(match[0])

    def AddColumnToSelect(self):

        item = self.listWidget.currentItem().text()
        self.listWidget_2.addItem(item)

    def RemoveColumnFromSelect(self):

        item = self.listWidget_2.currentRow()
        self.listWidget_2.takeItem(item)

    def RemoveColumnFromFilter(self):

        item = self.listWidget_3.currentRow()
        self.listWidget_3.takeItem(item)

    def GetDatabases(self):
        global con

        self.label.setStyleSheet("color: rgb(255, 255, 0);")
        self.label.setText('Running query to get Databases...')

        query = """SELECT DATABASE_NAME FROM SNOWFLAKE.INFORMATION_SCHEMA.DATABASES GROUP BY 1;"""
        data = pd.read_sql(query, con)
        df = data.values.tolist()

        self.DBComboBox.clear()
        for item in df:
            self.DBComboBox.addItem(item[0])

        self.DBComboBox.setCurrentIndex(0)

    def CreateGettingSchemaThread(self):
        thread = Thread(target=self.GetSchemas)
        thread.start()

    def GetSchemas(self):
        global con

        df = []
        try:
            self.label.setStyleSheet("color: rgb(255, 255, 0);")
            self.label.setText('Running query to get schemas...')

            query = """SELECT SCHEMA_NAME FROM {}.INFORMATION_SCHEMA.SCHEMATA;""".format(
                self.DBComboBox.currentText())
            data = pd.read_sql(query, con)
            df = data.values.tolist()

            self.SchemaComboBox.clear()
            for item in df:
                self.SchemaComboBox.addItem(item[0])

            self.SchemaComboBox.setCurrentIndex(0)

            self.label.setStyleSheet("color: rgb(0, 255, 0);")
            self.label.setText('Schemas Loaded!')
        except:
            self.label.setStyleSheet("color: rgb(255, 0, 0);")
            self.label.setText('Error Occurred in getting Schemas...')

    def CreateGettingTablesThread(self):
        thread = Thread(target=self.GetTables)
        thread.start()

    def GetTables(self):
        global con

        df = []
        try:
            self.label.setStyleSheet("color: rgb(255, 255, 0);")
            self.label.setText('Running query to get tables...')

            query = """SELECT TABLE_NAME FROM {}.INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '{}';""".format(
                self.DBComboBox.currentText(), self.SchemaComboBox.currentText())
            data = pd.read_sql(query, con)
            df = data.values.tolist()

            self.TableComboBox.clear()
            for item in df:
                self.TableComboBox.addItem(item[0])

            self.TableComboBox.setCurrentIndex(0)

            self.label.setStyleSheet("color: rgb(0, 255, 0);")
            self.label.setText('Tables Loaded!')
        except:
            self.label.setStyleSheet("color: rgb(255, 0, 0);")
            self.label.setText('Error Occurred in getting Tables...')

    def CreateGettingColumnsThread(self):
        thread = Thread(target=self.GetColumn)
        thread.start()

    def GetColumn(self):
        global con

        df = []
        try:
            self.label.setStyleSheet("color: rgb(255, 255, 0);")
            self.label.setText('Running query to get columns...')

            query = """SELECT COLUMN_NAME FROM {}.INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA =
            '{}' AND TABLE_NAME = '{}';""".format(self.DBComboBox.currentText(),
                                                  self.SchemaComboBox.currentText(),
                                                  self.TableComboBox.currentText())
            data = pd.read_sql(query, con)
            df = data.values.tolist()

            self.listWidget.clear()
            for item in df:
                self.listWidget.addItem(item[0])

            self.label.setStyleSheet("color: rgb(0, 255, 0);")
            self.label.setText('Ready!')

            self.DBComboBox.setCurrentText('VINMAY')
            self.SetIconsToColumns()
        except:
            self.label.setStyleSheet("color: rgb(255, 0, 0);")
            self.label.setText('Error Occurred in getting Columns...')

    def SetIconsToColumns(self):

        AuthIcon = os.getcwd() + "\\ICONS\\A.png"
        iconA = QtGui.QIcon()
        iconA.addPixmap(QtGui.QPixmap(AuthIcon), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        SetlIcon = os.getcwd() + "\\ICONS\\S.png"
        iconS = QtGui.QIcon()
        iconS.addPixmap(QtGui.QPixmap(SetlIcon), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        NNMDIcon = os.getcwd() + "\\ICONS\\N.png"
        iconN = QtGui.QIcon()
        iconN.addPixmap(QtGui.QPixmap(NNMDIcon), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        DescIcon = os.getcwd() + "\\ICONS\\D.png"
        iconD = QtGui.QIcon()
        iconD.addPixmap(QtGui.QPixmap(DescIcon), QtGui.QIcon.Normal, QtGui.QIcon.Off)

        for i in range(0, 10):
            item = self.listWidget.item(i)
            item.setIcon(iconA)

        for i in range(10, 15):
            item = self.listWidget.item(i)
            item.setIcon(iconD)

        for i in range(15, 20):
            item = self.listWidget.item(i)
            item.setIcon(iconN)

        for i in range(20, 30):
            item=self.listWidget.item(i)
            item.setIcon(iconS)

    def DeleteSelectColumns(self):

        NumberOfItems = self.listWidget_2.count()
        ItemList = []

        for i in range(0, NumberOfItems):
            item = self.listWidget_2.item(i)
            if item.text() in self.listWidget.textList:
                ItemList.append(i)

        for i in ItemList:
            self.listWidget_2.takeItem(i)

    def DeleteFilterColumns(self):

        NumberOfItems = self.listWidget_3.count()
        ItemList = []

        for i in range(0, NumberOfItems):
            item = self.listWidget_3.item(i)
            if item.text() in self.listWidget.textList:
                ItemList.append(i)

        for i in ItemList:
            self.listWidget_3.takeItem(i)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = Ui_MainWindow()
    window.show()
    highlight = sh.PythonHighlighter(window.textEdit.document())
    window.LoginWindow()
    sys.exit(app.exec_())
